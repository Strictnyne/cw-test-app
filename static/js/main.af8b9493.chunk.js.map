{"version":3,"sources":["components/results/result-item.js","components/results/index.js","components/csv-reader/index.js","App.js","reportWebVitals.js","index.js"],"names":["ResultItem","currencyFormatter","currency","toLocaleString","style","value","this","props","className","Object","entries","map","index","data","Component","Results","state","currentData","sheetHeader","filterResults","sortResults","sortOrder","type","placeholder","onChange","keys","item","keyName","link","href","onClick","length","key","colSpan","buttonRef","React","createRef","Index","handleOpenDialog","event","current","open","handleOnFileLoad","headerRow","sheetRows","forEach","push","trim","element","dataRow","cleanData","JSON","stringify","replace","cleansedObject","parse","setState","originalData","handleOnError","err","file","inputElem","reason","console","log","handleOnRemoveFile","sheetData","handleRemoveFile","removeFile","handleFilterResults","currentResults","currentSearchTerm","target","toLowerCase","newCurrentResults","match","alert","updatedResults","filter","some","search","handleSorting","sortedData","sortAsc","sort","first","last","localeCompare","reverse","prevState","ref","onFileLoad","onError","noClick","noDrag","config","header","noProgressBar","onRemoveFile","padding","name","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af8b9493.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nclass ResultItem extends Component {\n    currencyFormatter = (currency) => {\n        if(currency !== \"n/a\") {\n            return '$' + currency.toLocaleString('en-US', { style: 'currency' });\n        }\n        return \"n/a\";\n    }\n\n    render() {\n        const { value } = this.props;\n\n        return (\n            <tr className=\"animate__animated animate__fadeInUp\">\n                {\n                    Object.entries(value).map(([index, data]) => (\n                        <td key={index}>\n                            {\n                                index === \"Price\"\n                                    ? this.currencyFormatter(data)\n                                    : data\n                            }\n                        </td>\n                    ))\n                }\n            </tr>\n        );\n    }\n}\n\nexport default ResultItem;","import React, {Component} from \"react\";\nimport ResultItem from \"./result-item\";\n\n\nclass Results extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentData: null,\n\n        }\n    }\n\n    static getDerivedStateFromProps(props) {\n        return {\n            currentData: props.currentData,\n        };\n    }\n\n    render() {\n        const { sheetHeader, filterResults, sortResults } = this.props;\n        const { currentData, sortOrder } = this.state;\n\n        return (\n            <div className=\"grid-x grid-margin-x\">\n                <div className=\"columns small-8 small-offset-2\">\n                    {currentData &&\n                        <div className=\"animate__animated animate__fadeIn\">\n                            <div className=\"animate__animated animate__fadeInDown\">\n                                <input type=\"text\" placeholder=\"Filter Results\" onChange={filterResults}/>\n                            </div>\n\n                            <table>\n                                <thead>\n                                    <tr>\n                                        {\n                                            Object.keys(sheetHeader).map((item, index) => {\n                                                let keyName = sheetHeader[item]\n                                                let link = <a href=\"#\" onClick={() => sortResults(keyName, sortOrder)}>{keyName}</a>\n\n                                                return (\n                                                    <th key={index}>\n                                                        {link}\n                                                    </th>\n                                                )\n                                            })\n                                        }\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {\n                                        currentData.length > 0 ?\n                                            Object.entries(currentData).map(([key, value]) => (\n                                                <ResultItem key={key} value={value} />\n                                            ))\n                                            : <tr><td colSpan={4}>No results found</td></tr>\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Results;","import React, {Component} from \"react\";\nimport {CSVReader} from \"react-papaparse\";\nimport Results from \"../results\";\n\nconst buttonRef = React.createRef();\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sheetHeader: null,\n            currentData: null,\n            originalData: null,\n            sortAsc: true\n        }\n    }\n\n    handleOpenDialog = (event) => {\n        if(buttonRef.current) {\n            buttonRef.current.open(event);\n        }\n    }\n\n    handleOnFileLoad = (data) => {\n        let headerRow = []\n        let sheetRows = []\n\n        Object.keys(data[0].data).forEach(value => {\n            headerRow.push(value.trim())\n        })\n\n        data.forEach((element) => {\n            let dataRow = element.data\n            let parsedData = JSON.stringify(dataRow)\n            let cleanData = parsedData.replace(/\"([^\"]+)\\s\"/g, '\"$1\"')\n            let cleansedObject = JSON.parse(cleanData)\n\n            if(cleansedObject[\"Camper Make\"] !== \"\")\n                return sheetRows.push(cleansedObject)\n            return false;\n        })\n\n        this.setState({\n            sheetHeader: headerRow,\n            currentData: sheetRows,\n            originalData: sheetRows\n        })\n    };\n\n    handleOnError = (err, file, inputElem, reason) => {\n        console.log('---------------------------');\n        console.log(err);\n        console.log('---------------------------');\n    };\n\n    handleOnRemoveFile = () => {\n        this.setState({\n            sheetHeader: null,\n            sheetData: null\n        })\n    }\n\n    handleRemoveFile = (event) => {\n        if(buttonRef.current) {\n            buttonRef.current.removeFile(event);\n        }\n    }\n\n    handleFilterResults = (event) => {\n        let currentResults = this.state.originalData\n        let alphaNumeric = /^[0-9a-zA-Z]+$/;\n        let currentSearchTerm = event.target.value.toLowerCase()\n        let newCurrentResults = []\n\n        if(!currentSearchTerm.match(alphaNumeric) && currentSearchTerm !== \"\") {\n            alert(\"Please use only alpha-numeric text.\")\n            return false;\n        }\n\n        const updatedResults = currentResults.filter(item => {\n            return Object.keys(item).some((key) => {\n                if(item[key].toLowerCase().search(currentSearchTerm) > -1) {\n                    return newCurrentResults.push(item)\n                }\n                return false\n            });\n        });\n\n        this.setState({\n            currentData: updatedResults\n        });\n    }\n\n    handleSorting = (type) => {\n        let sortedData = this.state.currentData\n        const { sortAsc } = this.state\n\n        if(type === \"Camper Make\" || type === \"Camper Brand\") {\n            if(sortAsc) {\n                sortedData = [...sortedData].sort((first, last) => {\n                        return first[type].localeCompare(last[type])\n                })\n            }\n            else {\n                sortedData = [...sortedData].reverse((first, last) => {\n                    return last[type].localeCompare(first[type])\n                })\n            }\n        }\n        else {\n            sortedData = [...sortedData].sort((first, last) =>\n                sortAsc ? first[type] - last[type] : last[type] - first[type]\n            )\n        }\n\n        this.setState(prevState => ({\n            currentData: sortedData,\n            sortAsc: !prevState.sortAsc\n        }))\n    }\n\n    render() {\n        const { sheetHeader, currentData } = this.state;\n\n        return (\n            <div className=\"grid-x grid-margin-x\">\n                <div className=\"cell small-8 small-offset-2\">\n\n                        <CSVReader\n                            ref={buttonRef}\n                            onFileLoad={this.handleOnFileLoad}\n                            onError={this.handleOnError}\n                            noClick\n                            noDrag\n                            config={{\n                                header: true\n                            }}\n                            noProgressBar\n                            onRemoveFile={this.handleOnRemoveFile}\n                        >\n\n                        {({file}) => (\n                            <div>\n                                <div>\n                                    <button type=\"button\" onClick={this.handleOpenDialog} className=\"button\">\n                                        Browse file\n                                    </button>\n                                    <div style={{padding: 10}}>{file && file.name}</div>\n                                </div>\n                            </div>\n                        )}\n                    </CSVReader>\n\n                    <Results sheetHeader={sheetHeader}\n                             currentData={currentData}\n                             filterResults={this.handleFilterResults}\n                             sortResults={this.handleSorting}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import './App.css';\nimport React, { Component } from \"react\"\nimport CSVReader from \"./components/csv-reader/index\"\n\n\nexport default class App extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"title\">\n                    <h2>Camping World CSV Upload</h2>\n                </div>\n\n                <div className=\"grid-x grid-margin-x\">\n                    <div className=\"columns small-12\">\n                        <CSVReader />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}